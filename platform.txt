
# nrF52 compile variables
# ----------------------

name=Arduino ARM (32-bits) Boards

# Compile tool path
compiler.path={runtime.ide.path}/hardware/tools/gcc-arm-none-eabi-4.8.3-2014q1/bin/


# Compile s files options
compiler.S.cmd=arm-none-eabi-gcc 
compiler.S.flags=-c -g -x assembler-with-cpp -DNRF52


# Compile c files options
compiler.c.cmd=arm-none-eabi-gcc
compiler.c.flags=-DNRF52 -DS132 -DSOFTDEVICE_PRESENT -DBLE_STACK_SUPPORT_REQD -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} -mcpu=cortex-m4 -mfloat-abi=hard -mfpu=fpv4-sp-d16 -mthumb -c -g -Os -w -std=gnu99 -ffunction-sections -fdata-sections -fno-builtin -MMD

# Compile cpp files options
compiler.cpp.cmd=arm-none-eabi-g++
compiler.cpp.flags=-DNRF52 -DS132 -DSOFTDEVICE_PRESENT -DBLE_STACK_SUPPORT_REQD -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} -mcpu=cortex-m4 -mfloat-abi=hard -mfpu=fpv4-sp-d16 -mthumb -c -g -Os -w -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions -fno-builtin -MMD

# Compile includes
compiler.nrf_api_include="-I{runtime.ide.path}/hardware/tools/CMSIS/CMSIS/Include" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/device" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/drivers_nrf/hal" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/drivers_nrf/clock" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/drivers_nrf/common" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/drivers_nrf/config" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/drivers_nrf/delay" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/drivers_nrf/nrf_soc_nosd" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/drivers_nrf/uart" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/libraries/util" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/libraries/timer" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/libraries/trace" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/libraries/scheduler" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/libraries/uart" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/libraries/softuart" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/libraries/fifo" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/nfc/ndef/connection_handover/ac_rec" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/nfc/ndef/connection_handover/ep_oob_rec" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/nfc/ndef/connection_handover/hs_rec" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/nfc/ndef/connection_handover/le_oob_rec" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/nfc/ndef/connection_handover" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/nfc/ndef/generic/message" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/nfc/ndef/generic/record" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/nfc/ndef/launchapp" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/nfc/ndef/parser/message" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/nfc/ndef/parser/record" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/nfc/ndef/text" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/nfc/ndef/uri" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/nfc/t2t_lib" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/nfc/t2t_lib/hal_t2t" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/nfc/t2t_parser" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/nfc/t2t_lib" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/ble/common" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/softdevice/s132/headers" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/softdevice/common/softdevice_handler" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/toolchain" "-I{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/toolchain/gcc" "-I{runtime.ide.path}/hardware/arduino/nrf52/libraries/BLE" "-I{runtime.ide.path}/hardware/arduino/nrf52/libraries/BLE/common" "-I{runtime.ide.path}/hardware/arduino/nrf52/libraries/BLE/GATT" "-I{runtime.ide.path}/hardware/arduino/nrf52/libraries/BLE/GAP"

# Create archives options
compiler.ar.cmd=arm-none-eabi-ar
compiler.ar.flags=rcs

# Combine to create elf file options
compiler.c.elf.cmd=arm-none-eabi-g++

# Create bin file options
compiler.elf2bin.cmd=arm-none-eabi-objcopy
compiler.elf2bin.flags=-O binary

# Create hex file options
compiler.elf2hex.cmd=arm-none-eabi-objcopy
compiler.elf2hex.flags=-O ihex

# Calculate hex size options
compiler.size.cmd=arm-none-eabi-size

# nrF52832 compile patterns
# ------------------------

## Compile c files
recipe.c.o.pattern="{compiler.path}{compiler.c.cmd}" {compiler.c.flags} {build.extra_flags} {compiler.nrf_api_include} {includes} "{source_file}" -c -o "{object_file}"

## Compile c++ files
recipe.cpp.o.pattern="{compiler.path}{compiler.cpp.cmd}" {compiler.cpp.flags} {build.extra_flags} {compiler.nrf_api_include} {includes} "{source_file}" -c -o "{object_file}"

## Compile S files
recipe.S.o.pattern="{compiler.path}{compiler.S.cmd}" {compiler.S.flags} {compiler.nrf_api_include} "{source_file}" -c -o "{object_file}"


## Create archives
recipe.ar.pattern="{compiler.path}{compiler.ar.cmd}" {compiler.ar.flags} "{build.path}/{archive_file}" "{object_file}"


## Combine gc-sections, archives, and objects
recipe.c.combine.pattern="{compiler.path}{compiler.c.elf.cmd}" -mfloat-abi=hard -mfpu=fpv4-sp-d16 -Wl,--gc-sections --specs=nano.specs -mcpu={build.mcu} -mthumb "-T{build.variant.path}/{build.ldscript}" "-Wl,-Map={build.path}/{build.project_name}.map" -Wl,--cref -o "{build.path}/{build.project_name}.elf" "-L{build.path}" -Wl,--warn-common -Wl,--start-group {object_files} "{runtime.ide.path}/hardware/arduino/nrf52/cores/arduino/components/nfc/t2t_lib/nfc_t2t_lib_gcc.a" "{build.path}/{archive_file}" -Wl,--end-group


## Create bin
recipe.objcopy.eep.pattern="{compiler.path}{compiler.elf2bin.cmd}" {compiler.elf2bin.flags} "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.bin"

## Create hex
recipe.objcopy.hex.pattern="{compiler.path}{compiler.elf2hex.cmd}" {compiler.elf2hex.flags} "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.hex"

## Save hex
recipe.output.tmp_file={build.project_name}.hex
recipe.output.save_file={build.project_name}.{build.variant}.hex

## Compute size
recipe.size.pattern="{compiler.path}{compiler.size.cmd}" -A "{build.path}/{build.project_name}.elf"
recipe.size.regex=\.text\s+([0-9]+).*


# nrF52 Uploader tools
# -------------------

tools.openocd.cmd=bin/openocd
tools.openocd.cmd.windows=bin/openocd.exe
tools.openocd.path={runtime.ide.path}/hardware/tools/OpenOCD-0.9.0-arduino
tools.openocd.cmd.macosx=bin/openocd

tools.openocd.upload.params.verbose=
tools.openocd.upload.params.quiet=																											
tools.openocd.upload.pattern="{path}/{cmd}" -s "{path}/share/openocd/scripts/" -f ../../../../../arduino/nrf52/variants/{build.variant}/{build.openocdscript} -c "program {{{build.path}/{build.project_name}.hex}} verify reset exit"

tools.openocd.erase.params.verbose=
tools.openocd.erase.params.quiet=
tools.openocd.erase.pattern=

